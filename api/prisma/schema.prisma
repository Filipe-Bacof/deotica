generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  // VAMOS MUDAR PRA MONGODB?
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model clientes {
  id          String   @id @default(uuid())
  nome        String
  documento   String?
  telefone    String?
  email       String? // Para a possibilidade da v3 (leia o README)
  genero      String? // Para possiveis ofertas direcionados a publicos diferentes
  cep         String?
  uf          String?
  cidade      String?
  bairro      String?
  endereco    String?
  complemento String?
  createdBy   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  vendas      vendas[]
  criador     usuarios @relation(fields: [createdBy], references: [id])
}

model formasDePagamento {
  id        Int      @id @default(autoincrement())
  descricao String
  createdBy String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  vendas    vendas[]
  criador   usuarios @relation(fields: [createdBy], references: [id])
}

model perfilUsuario {
  id         Int        @id @default(autoincrement())
  nome       String     @unique
  permissoes String[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  usuarios   usuarios[]
}

model produtos {
  id             String           @id @default(uuid())
  nome           String
  quantidade     Int              @default(0)
  preco          Float
  status         Boolean
  codigoDeBarras String?
  marca          String?
  modelo         String?
  tipo           String?
  genero         String?
  produtoAtivo   String?
  createdBy      String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  vendasProdutos vendasProdutos[]
  criador        usuarios         @relation(fields: [createdBy], references: [id])
}

model usuarios {
  id                  String              @id @default(uuid())
  nome                String
  email               String              @unique
  senha               String
  perfilId            Int
  resetSenhaExpiracao String?
  resetSenhaToken     String?
  createdAt           DateTime            @default(now())
  updatedAt           DateTime            @updatedAt
  perfilUsuario       perfilUsuario       @relation(fields: [perfilId], references: [id])
  clientes            clientes[]
  formasDePagamento   formasDePagamento[]
  produtos            produtos[]
  vendas              vendas[]
  vendasProdutos      vendasProdutos[]
}

model vendas {
  id                 String            @id @default(uuid())
  formaDePagamentoId Int
  clienteId          String
  numeroDeParcelas   Int               @default(1)
  createdBy          String
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
  vendasProdutos     vendasProdutos[]
  formaDePagamento   formasDePagamento @relation(fields: [formaDePagamentoId], references: [id])
  cliente            clientes          @relation(fields: [clienteId], references: [id])
  criador            usuarios          @relation(fields: [createdBy], references: [id])
}

model vendasProdutos {
  vendaId    String
  produtoId  String
  quantidade Int
  preco      Float
  createdBy  String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  venda      vendas   @relation(fields: [vendaId], references: [id])
  produto    produtos @relation(fields: [produtoId], references: [id])
  criador    usuarios @relation(fields: [createdBy], references: [id])

  @@id([vendaId, produtoId])
}
